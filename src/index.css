@import url('https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&family=Outfit:wght@100..900&display=swap');

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:root {
  --primary-color: #00D6A7;
  --bg-color-900: #143141;
  --bg-color-800: #1D465C;
  --fs--1: clamp(0.8333rem, 0.7955rem + 0.1894vi, 0.9375rem);
  --fs-0: clamp(1.125rem, 1.0795rem + 0.2273vi, 1.25rem);
  --fs-1: clamp(1.35rem, 1.1982rem + 0.7591vi, 1.7675rem);
  --fs-2: clamp(1.62rem, 1.3003rem + 1.5986vi, 2.4992rem);
  --fs-3: clamp(1.944rem, 1.3658rem + 2.8908vi, 3.5339rem);
  --fs-4: clamp(2.3328rem, 1.364rem + 4.844vi, 4.997rem);
}

main>*+*,
article>*+*,
#root>*+* {
  margin-block-start: 2rem;
}

section>*+*,
li+li,
.dropdown+li {
  margin-block-start: 1rem;
}

.visually-hidden {
  position: absolute;
  left: -10000px;
  top: auto;
  overflow: hidden;
  width: 1px;
  height: 1px;
}

body {
  font-family: "Lexend Deca", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  font-size: var(--fs-1);
  color: var(--primary-color);
  background-color: var(--bg-color-900);
}

#root {
  display: grid;
  grid-template-rows: 1fr auto;
  max-width: 1200px;
  padding: 1rem;
  min-height: 100vh;
  min-height: 100dvh;
  margin-inline: auto;
}

footer {
  margin-inline: auto;
}

nav ul {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
  height: auto;
  font-size: var(--fs-0);
}

nav li {
  border: 0;
}

nav li+li {
  margin: 0;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

svg {
  fill: var(--primary-color);
  stroke: var(--bg-color-900);
  height: 48px;
  width: auto;
  pointer-events: none;
}

/*Buttons*/
button {
  border-radius: 10px;
  padding: 0.5rem 1.5rem;
  font-weight: 500;
  color: var(--primary-color);
  font-family: inherit;
  font-size: var(--fs-2);
  background-color: var(--bg-color-900);
  border: 2px solid var(--primary-color);
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 2rem;
  min-height: 56px;
}

.action {
  font-size: var(--fs-1);
  padding: 0.5rem 1rem;
  gap: 0.1rem;
  font-weight: 400;
}

.action svg {
  height: 32px;
}

/*Dice button container*/
.dice {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(70px, 1fr));
  width: 100%;
  max-width: min(400px, 100%);
  background-color: var(--bg-color-800);
  padding: clamp(1rem, 5%, 2rem);
  border-radius: 10px;
  gap: 1rem;
}

.dice button {
  border: 0;
  padding: 0;
  background-color: transparent;
}

.dice button svg {
  height: max(4rem, 5vw);
}

.dice svg g,
article svg g {
  fill: var(--bg-color-900);
}

/*Dice rolls*/
ul {
  list-style: none;
  height: 40vh;
  height: 40dvh;
  overflow-y: auto;
  padding-inline: 1rem;
  min-width: 250px;
  scrollbar-gutter: stable both-edges;
}

li {
  display: grid;
  justify-content: center;
  position: relative;
  border-bottom: 2px solid var(--primary-color);
}

li span {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.expand {
  grid-column: 1/-1;
  border: 0;
  padding: 0.25rem 0.5rem;
  margin: 0.25rem;
  margin-block-start: 0.25rem;
}

.expand[aria-expanded="true"] {
  transform: rotate(180deg);
}

.sum {
  border-radius: 10px;
  padding: 0.5rem 6rem;
  font-size: var(--fs-4);
  text-align: center;
  background-color: var(--bg-color-800);
}

.rolls,
.sum {
  visibility: hidden;
}

*.show {
  visibility: visible;
}

button[role="switch"] {
  border: 0;
  font-size: var(--fs-0);
}

.switch {
  --radius: 30px;
  height: 24px;
  width: 50px;
  border-radius: var(--radius);
  border: 2px solid var(--primary-color);
  background: var(--bg-color-800);
  display: flex;
  align-items: center;
  transition: background-color 0.25s ease;
}

button[aria-checked="true"] .switch {
  background: var(--primary-color);
}

button[role="switch"] .switch::after {
  content: "";
  height: 16px;
  width: 16px;
  border: 2px solid var(--bg-color-800);
  background: white;
  border-radius: var(--radius);
  transform: translateX(0);
  transition: transform 0.25s ease;
}

button[aria-checked="true"] .switch::after {
  transform: translateX(26px);
}

/*Dropdown menus*/
.dropdown {
  display: grid;
  width: 100%;
}

.dropdown button {
  font-size: var(--fs--1);
  border: 0;
  border-bottom: 2px solid var(--primary-color);
  border-radius: 0;
  font-weight: 300;
  padding-inline: 0.5rem;
  background-color: var(--bg-color-800);
  gap: 0.5rem;
  justify-content: flex-start;
  position: relative;
}

li>svg {
  position: absolute;
  height: 16px;
  top: 8px;
  right: 8px;
}

.dropdown button svg,
.expand svg {
  height: 20px;
}

header .dropdown {
  position: absolute;
  top: calc(100% + 10px);
  right: 0;
  max-width: 400px;
}

/*Settings page*/
section {
  width: 100%;
}

article span {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

section header {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
  position: relative;
  flex-wrap: wrap;
  gap: 0.5rem;
}

header h2+button {
  padding: 0.1rem;
}

header button svg {
  height: 24px;
}

section article {
  position: relative;
  padding: 1rem;
  border-bottom: 2px solid var(--primary-color);
}

/*States*/
button:not([role="switch"]):hover,
button:not([role="switch"]):active {
  background-color: var(--primary-color);
  color: var(--bg-color-900);
}

button:hover svg,
button:active svg {
  fill: var(--bg-color-900);
}

.dice button:hover,
.dice button:hover svg,
.dice button:active,
.dice button:active svg {
  background-color: transparent;
  stroke: var(--primary-color);
}

.dice button:hover svg g,
.dice button:active svg g {
  fill: var(--primary-color);
}

@media screen and (min-width: 800px) {
  .dice {
    max-width: min(1200px, 100%);
  }
}

@media (prefers-reduced-motion: reduce) {

  .switch,
  .switch::after {
    transition: none;
  }

}